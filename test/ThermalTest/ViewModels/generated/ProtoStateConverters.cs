// <auto-generated>
// Generated by RemoteMvvmTool.
// </auto-generated>

#nullable enable
using System.Linq;
using Generated.Protos;
using System;
using Google.Protobuf.WellKnownTypes;
namespace HPSystemsTools.ViewModels;

public static class ProtoStateConverters
{
    public static Generated.Protos.ThermalZoneComponentViewModelState ToProto(HPSystemsTools.ViewModels.ThermalZoneComponentViewModel model)
    {
        var state = new Generated.Protos.ThermalZoneComponentViewModelState();
        state.Zone = (int)model.Zone;
        state.IsActive = model.IsActive;
        state.DeviceName = model.DeviceName;
        state.Temperature = model.Temperature;
        state.ProcessorLoad = model.ProcessorLoad;
        state.FanSpeed = model.FanSpeed;
        state.SecondsInState = model.SecondsInState;
        state.FirstSeenInState = Timestamp.FromDateTime(model.FirstSeenInState.ToUniversalTime());
        state.Progress = model.Progress;
        state.Background = model.Background;
        state.Status = (int)model.Status;
        state.State = (int)model.State;
        return state;
    }

    public static HPSystemsTools.ViewModels.ThermalZoneComponentViewModel FromProto(Generated.Protos.ThermalZoneComponentViewModelState state)
    {
        var model = new HPSystemsTools.ViewModels.ThermalZoneComponentViewModel();
        model.Zone = (HP.Telemetry.Zone)state.Zone;
        model.IsActive = state.IsActive;
        model.DeviceName = state.DeviceName;
        model.Temperature = state.Temperature;
        model.ProcessorLoad = state.ProcessorLoad;
        model.FanSpeed = state.FanSpeed;
        model.SecondsInState = state.SecondsInState;
        model.FirstSeenInState = state.FirstSeenInState?.ToDateTime() ?? DateTime.MinValue;

        model.Progress = state.Progress;
        model.Background = state.Background;
        model.Status = (HPSystemsTools.Models.ThermalStateEnum)state.Status;
        model.State = (HPSystemsTools.Models.ThermalStateEnum)state.State;
        return model;
    }

    public static Generated.Protos.TestSettingsModelState ToProto(HPSystemsTools.Models.TestSettingsModel model)
    {
        var state = new Generated.Protos.TestSettingsModelState();
        state.CpuTemperatureThreshold = model.CpuTemperatureThreshold;
        state.CpuLoadThreshold = model.CpuLoadThreshold;
        state.CpuLoadTimeSpan = model.CpuLoadTimeSpan;
        return state;
    }

    public static HPSystemsTools.Models.TestSettingsModel FromProto(Generated.Protos.TestSettingsModelState state)
    {
        var model = new HPSystemsTools.Models.TestSettingsModel();
        model.CpuTemperatureThreshold = state.CpuTemperatureThreshold;
        model.CpuLoadThreshold = state.CpuLoadThreshold;
        model.CpuLoadTimeSpan = state.CpuLoadTimeSpan;
        return model;
    }

}
