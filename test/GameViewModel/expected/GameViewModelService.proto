syntax = "proto3";

package monsterclicker_viewmodels_protos;

option csharp_namespace = "MonsterClicker.ViewModels.Protos";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Message representing the full state of the GameViewModel
message GameViewModelState {
  bool can_use_special_attack = 1; // Original C#: bool CanUseSpecialAttack
  string game_message = 2; // Original C#: string GameMessage
  bool is_monster_defeated = 3; // Original C#: bool IsMonsterDefeated
  bool is_special_attack_on_cooldown = 4; // Original C#: bool IsSpecialAttackOnCooldown
  int32 monster_current_health = 5; // Original C#: int MonsterCurrentHealth
  int32 monster_max_health = 6; // Original C#: int MonsterMaxHealth
  string monster_name = 7; // Original C#: string MonsterName
  int32 player_damage = 8; // Original C#: int PlayerDamage
}

message PropertyChangeNotification {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

message UpdatePropertyValueRequest {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

message AttackMonsterRequest {
  // This command takes no parameters.
}

message AttackMonsterResponse {
  // Add fields here if the command returns data.
}

message ResetGameRequest {
  // This command takes no parameters.
}

message ResetGameResponse {
  // Add fields here if the command returns data.
}

message SpecialAttackAsyncRequest {
  // This command takes no parameters.
}

message SpecialAttackAsyncResponse {
  // Add fields here if the command returns data.
}

message SubscribeRequest {
  string client_id = 1;
}

enum ConnectionStatus {
  UNKNOWN = 0;
  CONNECTED = 1;
  DISCONNECTED = 2;
}

message ConnectionStatusResponse {
  ConnectionStatus status = 1;
}

service GameViewModelService {
  rpc GetState (google.protobuf.Empty) returns (GameViewModelState);
  rpc SubscribeToPropertyChanges (SubscribeRequest) returns (stream PropertyChangeNotification);
  rpc UpdatePropertyValue (UpdatePropertyValueRequest) returns (google.protobuf.Empty);
  rpc AttackMonster (AttackMonsterRequest) returns (AttackMonsterResponse);
  rpc ResetGame (ResetGameRequest) returns (ResetGameResponse);
  rpc SpecialAttackAsync (SpecialAttackAsyncRequest) returns (SpecialAttackAsyncResponse);
  rpc Ping (google.protobuf.Empty) returns (ConnectionStatusResponse);
}

