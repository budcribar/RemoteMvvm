"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for monsterclicker_viewmodels_protos
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameViewModelServiceClient = void 0;
// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.20.3
// source: GameViewModelService.proto
/* eslint-disable */
// @ts-nocheck
const grpcWeb = __importStar(require("grpc-web"));
const google_protobuf_empty_pb = __importStar(require("google-protobuf/google/protobuf/empty_pb")); // proto import: "google/protobuf/empty.proto"
const GameViewModelService_pb = __importStar(require("./GameViewModelService_pb")); // proto import: "GameViewModelService.proto"
class GameViewModelServiceClient {
    constructor(hostname, credentials, options) {
        this.methodDescriptorGetState = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/GetState', grpcWeb.MethodType.UNARY, google_protobuf_empty_pb.Empty, GameViewModelService_pb.GameViewModelState, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.GameViewModelState.deserializeBinary);
        this.methodDescriptorSubscribeToPropertyChanges = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/SubscribeToPropertyChanges', grpcWeb.MethodType.SERVER_STREAMING, GameViewModelService_pb.SubscribeRequest, GameViewModelService_pb.PropertyChangeNotification, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.PropertyChangeNotification.deserializeBinary);
        this.methodDescriptorUpdatePropertyValue = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/UpdatePropertyValue', grpcWeb.MethodType.UNARY, GameViewModelService_pb.UpdatePropertyValueRequest, google_protobuf_empty_pb.Empty, (request) => {
            return request.serializeBinary();
        }, google_protobuf_empty_pb.Empty.deserializeBinary);
        this.methodDescriptorAttackMonster = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/AttackMonster', grpcWeb.MethodType.UNARY, GameViewModelService_pb.AttackMonsterRequest, GameViewModelService_pb.AttackMonsterResponse, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.AttackMonsterResponse.deserializeBinary);
        this.methodDescriptorResetGame = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/ResetGame', grpcWeb.MethodType.UNARY, GameViewModelService_pb.ResetGameRequest, GameViewModelService_pb.ResetGameResponse, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.ResetGameResponse.deserializeBinary);
        this.methodDescriptorSpecialAttackAsync = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/SpecialAttackAsync', grpcWeb.MethodType.UNARY, GameViewModelService_pb.SpecialAttackAsyncRequest, GameViewModelService_pb.SpecialAttackAsyncResponse, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.SpecialAttackAsyncResponse.deserializeBinary);
        this.methodDescriptorPing = new grpcWeb.MethodDescriptor('/monsterclicker_viewmodels_protos.GameViewModelService/Ping', grpcWeb.MethodType.UNARY, google_protobuf_empty_pb.Empty, GameViewModelService_pb.ConnectionStatusResponse, (request) => {
            return request.serializeBinary();
        }, GameViewModelService_pb.ConnectionStatusResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname.replace(/\/+$/, '');
        this.credentials_ = credentials;
        this.options_ = options;
    }
    getState(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/GetState', request, metadata || {}, this.methodDescriptorGetState, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/GetState', request, metadata || {}, this.methodDescriptorGetState);
    }
    subscribeToPropertyChanges(request, metadata) {
        return this.client_.serverStreaming(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/SubscribeToPropertyChanges', request, metadata || {}, this.methodDescriptorSubscribeToPropertyChanges);
    }
    updatePropertyValue(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/UpdatePropertyValue', request, metadata || {}, this.methodDescriptorUpdatePropertyValue, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/UpdatePropertyValue', request, metadata || {}, this.methodDescriptorUpdatePropertyValue);
    }
    attackMonster(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/AttackMonster', request, metadata || {}, this.methodDescriptorAttackMonster, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/AttackMonster', request, metadata || {}, this.methodDescriptorAttackMonster);
    }
    resetGame(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/ResetGame', request, metadata || {}, this.methodDescriptorResetGame, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/ResetGame', request, metadata || {}, this.methodDescriptorResetGame);
    }
    specialAttackAsync(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/SpecialAttackAsync', request, metadata || {}, this.methodDescriptorSpecialAttackAsync, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/SpecialAttackAsync', request, metadata || {}, this.methodDescriptorSpecialAttackAsync);
    }
    ping(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/monsterclicker_viewmodels_protos.GameViewModelService/Ping', request, metadata || {}, this.methodDescriptorPing, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/monsterclicker_viewmodels_protos.GameViewModelService/Ping', request, metadata || {}, this.methodDescriptorPing);
    }
}
exports.GameViewModelServiceClient = GameViewModelServiceClient;
//# sourceMappingURL=GameViewModelServiceServiceClientPb.js.map