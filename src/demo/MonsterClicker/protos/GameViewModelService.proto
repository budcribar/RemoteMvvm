syntax = "proto3";

package monsterclicker_viewmodels_protos;

option csharp_namespace = "MonsterClicker.ViewModels.Protos";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Message representing the full state of the GameViewModel
message GameViewModelState {
  string monster_name = 1;
  int32 monster_max_health = 2;
  int32 monster_current_health = 3;
  int32 player_damage = 4;
  string game_message = 5;
  bool is_monster_defeated = 6;
  bool can_use_special_attack = 7;
}

// Message for property change notifications
message PropertyChangeNotification {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

// Request to update a property's value
message UpdatePropertyValueRequest {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

// Service definition
service GameViewModelService {
  rpc GetState (google.protobuf.Empty) returns (GameViewModelState);
  rpc SubscribeToPropertyChanges (google.protobuf.Empty) returns (stream PropertyChangeNotification);
  rpc UpdatePropertyValue (UpdatePropertyValueRequest) returns (google.protobuf.Empty);
  // Add RPCs for your commands here if they were generated
  // Example:
  // rpc AttackMonster (AttackMonsterRequest) returns (AttackMonsterResponse);
  // rpc SpecialAttack (SpecialAttackRequest) returns (SpecialAttackResponse);
  // rpc ResetGame (ResetGameRequest) returns (ResetGameResponse);
}

// You would also need message definitions for command requests/responses
// if your ProtoGeneratorUtil is generating them. Based on your previous
// proto output, these were missing, which is fine if the commands
// don't take parameters or return specific structures other than Empty.
// If your commands (AttackMonster, SpecialAttack, ResetGame) are supposed
// to be in the service, their request/response messages also need to be defined.
// For example:
// message AttackMonsterRequest {}
// message AttackMonsterResponse {}
// message SpecialAttackRequest {} // Add fields if it takes parameters
// message SpecialAttackResponse {}
// message ResetGameRequest {}
// message ResetGameResponse {}
