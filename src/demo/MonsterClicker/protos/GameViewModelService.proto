syntax = "proto3";

package monsterclicker_viewmodels_protos;

option csharp_namespace = "MonsterClicker.ViewModels.Protos";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Message representing the full state of the GameViewModel
message GameViewModelState {
  string monster_name = 1;
  int32 monster_max_health = 2;
  int32 monster_current_health = 3;
  int32 player_damage = 4;
  string game_message = 5;
  bool is_monster_defeated = 6;
  bool can_use_special_attack = 7;
  bool is_special_attack_on_cooldown = 8;
}

// Message for property change notifications
message PropertyChangeNotification {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

// Request to update a property's value
message UpdatePropertyValueRequest {
  string property_name = 1;
  google.protobuf.Any new_value = 2;
}

// Request message for AttackMonster command
message AttackMonsterRequest {
}

// Response message for AttackMonster command
message AttackMonsterResponse {
}

// Request message for SpecialAttackAsync command
message SpecialAttackAsyncRequest {
}

// Response message for SpecialAttackAsync command
message SpecialAttackAsyncResponse {
}

// Request message for ResetGame command
message ResetGameRequest {
}

// Response message for ResetGame command
message ResetGameResponse {
}

service GameViewModelService {
  // RPC for getting the initial state
  rpc GetState (google.protobuf.Empty) returns (GameViewModelState);

  // RPC for subscribing to property changes
  rpc SubscribeToPropertyChanges (google.protobuf.Empty) returns (stream PropertyChangeNotification);

  // RPC for a client to update a property value on the server
  rpc UpdatePropertyValue (UpdatePropertyValueRequest) returns (google.protobuf.Empty);

  // RPC for AttackMonster command
  rpc AttackMonster (AttackMonsterRequest) returns (AttackMonsterResponse);
  // RPC for SpecialAttackAsync command
  rpc SpecialAttackAsync (SpecialAttackAsyncRequest) returns (SpecialAttackAsyncResponse);
  // RPC for ResetGame command
  rpc ResetGame (ResetGameRequest) returns (ResetGameResponse);
}

